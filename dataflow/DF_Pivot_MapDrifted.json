{
	"name": "DF_Pivot_MapDrifted",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorageWorkshop",
						"type": "LinkedServiceReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "pivot"
				},
				{
					"name": "derivedColumn"
				},
				{
					"name": "select"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "compose",
					"flowlet": {
						"referenceName": "FLW_GreenTaxi",
						"type": "DataFlowReference"
					}
				}
			],
			"scriptLines": [
				"compose(composition: 'FLW_GreenTaxi') ~> compose@(output)",
				"select pivot(groupBy(pickupdate),",
				"     pivotBy(PULocationID),",
				"     num_of_ = count(1),",
				"     columnNaming: '$N$V_count',",
				"     lateral: false) ~> pivot",
				"compose@output derive(pickupdate = toDate(lpep_pickup_datetime)) ~> derivedColumn",
				"derivedColumn select(mapColumn(",
				"          VendorID,",
				"          store_and_fwd_flag,",
				"          RatecodeID,",
				"          PULocationID,",
				"          DOLocationID,",
				"          passenger_count,",
				"          trip_distance,",
				"          fare_amount,",
				"          extra,",
				"          mta_tax,",
				"          tip_amount,",
				"          tolls_amount,",
				"          ehail_fee,",
				"          improvement_surcharge,",
				"          total_amount,",
				"          payment_type,",
				"          trip_type,",
				"          congestion_surcharge,",
				"          pickupdate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"pivot derive(num_of_1_count = toLong(byName('num_of_1_count')),",
				"          num_of_7_count = toLong(byName('num_of_7_count')),",
				"          num_of_18_count = toLong(byName('num_of_18_count')),",
				"          num_of_21_count = toLong(byName('num_of_21_count')),",
				"          num_of_24_count = toLong(byName('num_of_24_count')),",
				"          num_of_25_count = toLong(byName('num_of_25_count')),",
				"          num_of_33_count = toLong(byName('num_of_33_count')),",
				"          num_of_35_count = toLong(byName('num_of_35_count')),",
				"          num_of_36_count = toLong(byName('num_of_36_count')),",
				"          num_of_37_count = toLong(byName('num_of_37_count')),",
				"          num_of_41_count = toLong(byName('num_of_41_count')),",
				"          num_of_42_count = toLong(byName('num_of_42_count')),",
				"          num_of_43_count = toLong(byName('num_of_43_count')),",
				"          num_of_47_count = toLong(byName('num_of_47_count')),",
				"          num_of_49_count = toLong(byName('num_of_49_count')),",
				"          num_of_52_count = toLong(byName('num_of_52_count')),",
				"          num_of_55_count = toLong(byName('num_of_55_count')),",
				"          num_of_56_count = toLong(byName('num_of_56_count')),",
				"          num_of_61_count = toLong(byName('num_of_61_count')),",
				"          num_of_65_count = toLong(byName('num_of_65_count')),",
				"          num_of_66_count = toLong(byName('num_of_66_count')),",
				"          num_of_70_count = toLong(byName('num_of_70_count')),",
				"          num_of_72_count = toLong(byName('num_of_72_count')),",
				"          num_of_73_count = toLong(byName('num_of_73_count')),",
				"          num_of_74_count = toLong(byName('num_of_74_count')),",
				"          num_of_75_count = toLong(byName('num_of_75_count')),",
				"          num_of_76_count = toLong(byName('num_of_76_count')),",
				"          num_of_77_count = toLong(byName('num_of_77_count')),",
				"          num_of_80_count = toLong(byName('num_of_80_count')),",
				"          num_of_82_count = toLong(byName('num_of_82_count')),",
				"          num_of_83_count = toLong(byName('num_of_83_count')),",
				"          num_of_91_count = toLong(byName('num_of_91_count')),",
				"          num_of_92_count = toLong(byName('num_of_92_count')),",
				"          num_of_93_count = toLong(byName('num_of_93_count')),",
				"          num_of_95_count = toLong(byName('num_of_95_count')),",
				"          num_of_97_count = toLong(byName('num_of_97_count')),",
				"          num_of_98_count = toLong(byName('num_of_98_count')),",
				"          num_of_102_count = toLong(byName('num_of_102_count')),",
				"          num_of_106_count = toLong(byName('num_of_106_count')),",
				"          num_of_116_count = toLong(byName('num_of_116_count')),",
				"          num_of_120_count = toLong(byName('num_of_120_count')),",
				"          num_of_122_count = toLong(byName('num_of_122_count')),",
				"          num_of_126_count = toLong(byName('num_of_126_count')),",
				"          num_of_127_count = toLong(byName('num_of_127_count')),",
				"          num_of_129_count = toLong(byName('num_of_129_count')),",
				"          num_of_130_count = toLong(byName('num_of_130_count')),",
				"          num_of_134_count = toLong(byName('num_of_134_count')),",
				"          num_of_135_count = toLong(byName('num_of_135_count')),",
				"          num_of_139_count = toLong(byName('num_of_139_count')),",
				"          num_of_145_count = toLong(byName('num_of_145_count')),",
				"          num_of_146_count = toLong(byName('num_of_146_count')),",
				"          num_of_152_count = toLong(byName('num_of_152_count')),",
				"          num_of_153_count = toLong(byName('num_of_153_count')),",
				"          num_of_157_count = toLong(byName('num_of_157_count')),",
				"          num_of_159_count = toLong(byName('num_of_159_count')),",
				"          num_of_166_count = toLong(byName('num_of_166_count')),",
				"          num_of_167_count = toLong(byName('num_of_167_count')),",
				"          num_of_168_count = toLong(byName('num_of_168_count')),",
				"          num_of_169_count = toLong(byName('num_of_169_count')),",
				"          num_of_171_count = toLong(byName('num_of_171_count')),",
				"          num_of_173_count = toLong(byName('num_of_173_count')),",
				"          num_of_174_count = toLong(byName('num_of_174_count')),",
				"          num_of_181_count = toLong(byName('num_of_181_count')),",
				"          num_of_183_count = toLong(byName('num_of_183_count')),",
				"          num_of_189_count = toLong(byName('num_of_189_count')),",
				"          num_of_191_count = toLong(byName('num_of_191_count')),",
				"          num_of_192_count = toLong(byName('num_of_192_count')),",
				"          num_of_193_count = toLong(byName('num_of_193_count')),",
				"          num_of_194_count = toLong(byName('num_of_194_count')),",
				"          num_of_196_count = toLong(byName('num_of_196_count')),",
				"          num_of_197_count = toLong(byName('num_of_197_count')),",
				"          num_of_207_count = toLong(byName('num_of_207_count')),",
				"          num_of_210_count = toLong(byName('num_of_210_count')),",
				"          num_of_212_count = toLong(byName('num_of_212_count')),",
				"          num_of_213_count = toLong(byName('num_of_213_count')),",
				"          num_of_215_count = toLong(byName('num_of_215_count')),",
				"          num_of_216_count = toLong(byName('num_of_216_count')),",
				"          num_of_220_count = toLong(byName('num_of_220_count')),",
				"          num_of_223_count = toLong(byName('num_of_223_count')),",
				"          num_of_226_count = toLong(byName('num_of_226_count')),",
				"          num_of_227_count = toLong(byName('num_of_227_count')),",
				"          num_of_228_count = toLong(byName('num_of_228_count')),",
				"          num_of_232_count = toLong(byName('num_of_232_count')),",
				"          num_of_236_count = toLong(byName('num_of_236_count')),",
				"          num_of_241_count = toLong(byName('num_of_241_count')),",
				"          num_of_242_count = toLong(byName('num_of_242_count')),",
				"          num_of_243_count = toLong(byName('num_of_243_count')),",
				"          num_of_244_count = toLong(byName('num_of_244_count')),",
				"          num_of_247_count = toLong(byName('num_of_247_count')),",
				"          num_of_248_count = toLong(byName('num_of_248_count')),",
				"          num_of_250_count = toLong(byName('num_of_250_count')),",
				"          num_of_253_count = toLong(byName('num_of_253_count')),",
				"          num_of_254_count = toLong(byName('num_of_254_count')),",
				"          num_of_255_count = toLong(byName('num_of_255_count')),",
				"          num_of_256_count = toLong(byName('num_of_256_count')),",
				"          num_of_259_count = toLong(byName('num_of_259_count')),",
				"          num_of_260_count = toLong(byName('num_of_260_count')),",
				"          num_of_263_count = toLong(byName('num_of_263_count')),",
				"          num_of_264_count = toLong(byName('num_of_264_count')),",
				"          num_of_265_count = toLong(byName('num_of_265_count'))) ~> MapDrifted1",
				"MapDrifted1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'synpswrkshp',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          pickupdate",
				"     )) ~> sink"
			]
		}
	}
}
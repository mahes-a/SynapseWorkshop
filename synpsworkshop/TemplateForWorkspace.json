{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synpsworkshop"
		},
		"AzureDataLakeStorageWorkshop_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageWorkshop'"
		},
		"synpsworkshop-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synpsworkshop-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synpsworkshop.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorageWorkshop_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgwrkshp.dfs.core.windows.net/"
		},
		"synpsworkshop-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stgwrkshp.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/PL_DF_DEBUG_EXPLORATION')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow debug explore",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DataExploration",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcadls": {},
									"srcnewlkp": {},
									"snkadls": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "DataFlowWarmPoolIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/DF_DataExploration')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/DataFlowWarmPoolIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DS_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageWorkshop",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "green_tripdata_2022-11.parquet",
						"fileSystem": "synpswrkshp"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "INT64"
					},
					{
						"name": "lpep_pickup_datetime",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "lpep_dropoff_datetime",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "UTF8"
					},
					{
						"name": "RatecodeID",
						"type": "DOUBLE"
					},
					{
						"name": "PULocationID",
						"type": "INT64"
					},
					{
						"name": "DOLocationID",
						"type": "INT64"
					},
					{
						"name": "passenger_count",
						"type": "DOUBLE"
					},
					{
						"name": "trip_distance",
						"type": "DOUBLE"
					},
					{
						"name": "fare_amount",
						"type": "DOUBLE"
					},
					{
						"name": "extra",
						"type": "DOUBLE"
					},
					{
						"name": "mta_tax",
						"type": "DOUBLE"
					},
					{
						"name": "tip_amount",
						"type": "DOUBLE"
					},
					{
						"name": "tolls_amount",
						"type": "DOUBLE"
					},
					{
						"name": "ehail_fee",
						"type": "INT32"
					},
					{
						"name": "improvement_surcharge",
						"type": "DOUBLE"
					},
					{
						"name": "total_amount",
						"type": "DOUBLE"
					},
					{
						"name": "payment_type",
						"type": "DOUBLE"
					},
					{
						"name": "trip_type",
						"type": "DOUBLE"
					},
					{
						"name": "congestion_surcharge",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorageWorkshop')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorageWorkshop')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageWorkshop_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageWorkshop_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synpsworkshop-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synpsworkshop-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synpsworkshop-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synpsworkshop-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DataFlowWarmPoolIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"description": "DataFlowWarmPoolIntegrationRuntime",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 60,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_DataExploration')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Parquet",
								"type": "DatasetReference"
							},
							"name": "srcadls"
						},
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorageWorkshop",
								"type": "LinkedServiceReference"
							},
							"name": "srcnewlkp"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorageWorkshop",
								"type": "LinkedServiceReference"
							},
							"name": "snkadls"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          VendorID as long,",
						"          lpep_pickup_datetime as timestamp,",
						"          lpep_dropoff_datetime as timestamp,",
						"          store_and_fwd_flag as string,",
						"          RatecodeID as double,",
						"          PULocationID as long,",
						"          DOLocationID as long,",
						"          passenger_count as double,",
						"          trip_distance as double,",
						"          fare_amount as double,",
						"          extra as double,",
						"          mta_tax as double,",
						"          tip_amount as double,",
						"          tolls_amount as double,",
						"          ehail_fee as integer,",
						"          improvement_surcharge as double,",
						"          total_amount as double,",
						"          payment_type as double,",
						"          trip_type as double,",
						"          congestion_surcharge as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> srcadls",
						"source(output(",
						"          {_col0_} as string,",
						"          {_col1_} as string,",
						"          {_col2_} as string,",
						"          {_col3_} as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'synpswrkshp',",
						"     fileName: 'taxizonelookup.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false) ~> srcnewlkp",
						"srcadls sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'synpswrkshp',",
						"     folderPath: 'Delta',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> snkadls"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Parquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorageWorkshop')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DF_Partioning_Optmize')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Parquet",
								"type": "DatasetReference"
							},
							"name": "srcDF"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorageWorkshop",
								"type": "LinkedServiceReference"
							},
							"name": "sinkdelta"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          VendorID as long,",
						"          lpep_pickup_datetime as timestamp,",
						"          lpep_dropoff_datetime as timestamp,",
						"          store_and_fwd_flag as string,",
						"          RatecodeID as double,",
						"          PULocationID as long,",
						"          DOLocationID as long,",
						"          passenger_count as double,",
						"          trip_distance as double,",
						"          fare_amount as double,",
						"          extra as double,",
						"          mta_tax as double,",
						"          tip_amount as double,",
						"          tolls_amount as double,",
						"          ehail_fee as integer,",
						"          improvement_surcharge as double,",
						"          total_amount as double,",
						"          payment_type as double,",
						"          trip_type as double,",
						"          congestion_surcharge as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> srcDF",
						"srcDF sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delta',",
						"     fileSystem: 'synpswrkshp',",
						"     folderPath: 'Delta',",
						"     mergeSchema: false,",
						"     autoCompact: false,",
						"     optimizedWrite: false,",
						"     vacuum: 0,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('key',",
						"          1,",
						"          PULocationID",
						"     )) ~> sinkdelta"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DS_Parquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorageWorkshop')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PL_Partition_Optimize')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow partition",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Partioning_Optmize",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcDF": {},
									"sinkdelta": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "DataFlowWarmPoolIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/DataFlowWarmPoolIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/dataflows/DF_Partioning_Optmize')]"
			]
		}
	]
}